// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  avatar        String
  birthday      String
  id            String @id @default(uuid())
  name          String
  email         String @unique
  tasks         Task[]
  deletedTask   Task[] @relation("deleter")
  cancelledTask Task[] @relation("canceller")
  age           Int
  password      String
  bin           Bin?
}

model Bin {
  id     String @id @unique @default(uuid())
  owner  User   @relation(fields: [userId], references: [id])
  userId String @unique
  tasks  Task[]
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String
  status      TaskStatus
  createdAt   DateTime   @default(now())
  dueDate     DateTime
  modifiedAt  DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  userId      String     @unique
  isDeleted   Boolean    @default(false)
  isCancelled Boolean    @default(false)
  deletedBy   String
  remover     User       @relation("deleter", fields: [deletedBy], references: [id])
  cancelledBy String
  canceller   User       @relation("canceller", fields: [cancelledBy], references: [id])
  bin         Bin        @relation(fields: [binId], references: [id])
  binId       String     @unique
}

enum TaskStatus {
  DONE
  ACCOMPLISHED
  PENDING
}
